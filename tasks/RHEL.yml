---
- name: Configure Users in RHEL
  block:
    - name: create users
      user:
        name: "{{ item.name }}"
        generate_ssh_key: "{{ user_gen_sshkey }}"
        groups: "{{ item.groups | default() }}"
      with_items: "{{ users_list }}"

    # Whether to remove all other non-specified keys from the authorized_keys
    # file. Multiple keys can be specified in a single key string value by
    # separating them by newlines.
    # This option is not loop aware, so if you use with_ , it will be
    # exclusive per iteration of the loop, if you want multiple keys in the
    # file you need to pass them all to key in a single batch as mentioned
    # above.

    - name: authorized_keys for users
      authorized_key:
        user: "{{ item.name }}"
        key: "{{ item.ssh_key }}"
        exclusive: "{{ user_sshkey_exclusive }}"
      when: item.ssh_key is defined
      with_items: "{{ users_list }}"

    - name: initialize sudoers_list list
      set_fact:
        sudoers_list: "{{ sudoers_list|default([]) }} + [{{ item }}]"
      when: (item.sudoers is defined and item.sudoers) and item.sudo_opts is defined
      with_items: "{{ users_list }}"

    - name: set default sudo_opts if not defined
      set_fact:
        sudoers_list: "{{ sudoers_list|default([]) }} + [ {{ item|combine( {'sudo_opts':{} } ) }} ]"
      when: (item.sudoers is defined and item.sudoers) and item.sudo_opts is undefined
      with_items: "{{ users_list }}"

    - name: create user sudoers file
      template:
        src: templates/sudoers-user.j2
        dest: "/etc/sudoers.d/99-{{ item.name }}"
        validate: "/usr/sbin/visudo -cf %s"
      when: (item.sudoers is defined and item.sudoers)
      with_items: "{{ sudoers_list }}"

  when: users_list|length > 0
